{"version":3,"file":"static/js/6.7cd262bc.chunk.js","mappings":"qOAuBA,UAnBa,WACX,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAUA,OARAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,qGACmBC,EAAAA,EAAAA,MADnB,OACOC,EADP,OAECH,EAAUG,GAFX,0CAAD,EAKD,GAAE,KAGD,6BACE,eAAIC,MAAO,CAAEC,aAAc,QAA3B,SAAqC,mBACpCN,EAAOO,OAAS,IAAK,SAAC,IAAD,CAAUP,OAAQA,MAG7C,C,mGCnBYQ,EAAYC,EAAAA,GAAAA,IAAH,wHAMTC,EAAcD,EAAAA,GAAAA,IAAH,ghBAmCXE,EAAYF,EAAAA,GAAAA,GAAH,8G,SCvCTG,EAAW,SAAC,GAAgB,IAAdZ,EAAa,EAAbA,OACnBa,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACN,EAAD,UACGR,EAAOe,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YAClBC,EAASD,EAAW,0CACaA,GACnC,4DAEJ,OACE,SAACR,EAAD,WACE,UAAC,KAAD,CAAMU,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMT,GAA1C,WACE,gBAAKU,IAAKJ,EAAQK,IAAKP,EAAOQ,QAAQ,UACtC,SAACd,EAAD,UAAYM,QAHED,EAOrB,KAGN,C,sICnBKU,E,OAAcC,EAAAA,OAAa,CAC/BC,QALe,+BAMfC,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OANf,0NAUK,SAAe5B,IAAtB,4CAAO,OAAP,oBAAO,sGACkBuB,EAAYM,IAAI,sBADlC,uBACGC,EADH,EACGA,KADH,kBAEEA,EAAKC,SAFP,kEAKA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAA0BnB,EAAIoB,GAA9B,kFACCC,EAAMD,EAAK,gBAAYpB,EAAZ,YAAkBoB,GAAlB,gBAAqCpB,GADjD,SAEkBU,EAAYM,IAAIK,GAFlC,uBAEGJ,EAFH,EAEGA,KAFH,kBAGEA,GAHF,kEAMA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,yFACkBb,EAAYM,IAAI,eAAgB,CAAEQ,OAAQ,CAAED,MAAAA,KAD9D,uBACGN,EADH,EACGA,KADH,kBAEEA,EAAKC,SAFP,kE","sources":["Pages/Home.jsx","components/FilmList/FilmList.styled.js","components/FilmList/FilmList.jsx","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { getDayTrending } from 'services/api';\nimport { FilmList } from 'components/FilmList/FilmList';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      const res = await getDayTrending();\n      setMovies(res);\n      // console.log(res);\n    })();\n  }, []);\n\n  return (\n    <main>\n      <h1 style={{ marginBottom: '16px' }}>Trending today</h1>\n      {movies.length > 0 && <FilmList movies={movies} />}\n    </main>\n  );\n};\n\nexport default Home;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(288px, 1fr));\n  gap: 16px;\n`;\n\nexport const CardWrapper = styled.div`\n  display: flex;\n  /* align-items: center; */\n  justify-content: center;\n  padding: 5px;\n  min-height: 468px;\n\n  border: 1px solid black;\n  border-radius: 4px;\n\n  transition: transform 0.3s;\n\n  img {\n    margin-bottom: 8px;\n\n    /* height: 100%; */\n    min-height: 288px;\n    width: 100%;\n    max-width: 342px;\n\n    aspect-ratio: 2/3;\n    object-fit: cover;\n\n    border-radius: 4px;\n  }\n\n  &:hover {\n    transform: scale(1.03);\n  }\n\n  > a {\n    text-decoration: none;\n  }\n`;\n\nexport const MovieName = styled.h3`\n  margin-bottom: 0;\n\n  max-width: 342px; // the same as img width\n  color: black;\n`;\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { CardWrapper, Container, MovieName } from './FilmList.styled';\n\nexport const FilmList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <Container>\n      {movies.map(({ id, title, poster_path }) => {\n        const imgUrl = poster_path\n          ? `https://image.tmdb.org/t/p/w342/${poster_path}`\n          : 'https://www.tgv.com.my/assets/images/404/movie-poster.jpg';\n\n        return (\n          <CardWrapper key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <img src={imgUrl} alt={title} loading=\"lazy\" />\n              <MovieName>{title}</MovieName>\n            </Link>\n          </CardWrapper>\n        );\n      })}\n    </Container>\n  );\n};\n\nFilmList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst AUTHORIZATION_BEARER =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmODU0Y2RkODdhYTkwNTNjYTAwMjI5ZmVhNzNlNTkyNSIsInN1YiI6IjYxODZmYWFkZmU2MzE4MDA2NDgzZTdkZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.vm-UaTyMPJ2HhXiSRvz-VpPqqqKEF-3PBdhfYlg5v3g';\n\nconst movieDBInst = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    accept: 'application/json',\n    Authorization: `Bearer ${AUTHORIZATION_BEARER}`,\n  },\n});\n\nexport async function getDayTrending() {\n  const { data } = await movieDBInst.get('trending/movie/day');\n  return data.results;\n}\n\nexport async function searchById(id, param) {\n  const url = param ? `movie/${id}/${param}` : `movie/${id}`;\n  const { data } = await movieDBInst.get(url);\n  return data;\n}\n\nexport async function searchByQuery(query) {\n  const { data } = await movieDBInst.get('search/movie', { params: { query } });\n  return data.results;\n}\n"],"names":["useState","movies","setMovies","useEffect","getDayTrending","res","style","marginBottom","length","Container","styled","CardWrapper","MovieName","FilmList","location","useLocation","map","id","title","poster_path","imgUrl","to","state","from","src","alt","loading","movieDBInst","axios","baseURL","headers","accept","Authorization","get","data","results","searchById","param","url","searchByQuery","query","params"],"sourceRoot":""}