{"version":3,"file":"static/js/186.1bacfade.chunk.js","mappings":"gOAoCA,UAhCgB,SAAC,GAAiB,IAAfA,EAAc,EAAdA,QACjB,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAUA,OARAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,uGAC2BC,EAAAA,EAAAA,IAAWL,EAAS,WAD/C,gBACSM,EADT,EACSA,QACRH,EAAWG,GAFZ,0CAAD,EAKD,GAAE,CAACN,KAGF,2BACGE,IACC,wBACGA,EAAQK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,gBAAaC,MAAO,CAAEC,aAAc,QAApC,WACE,wBAAKH,KACL,uBAAIC,MAFGF,EADE,MAQG,IAAnBN,EAAQW,SAAgB,uBAAG,+CAGjC,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { searchById } from 'services/api';\n\nconst Reviews = ({ movieId }) => {\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      const { results } = await searchById(movieId, 'reviews');\n      setReviews(results);\n      // console.log(results);\n    })();\n  }, [movieId]);\n\n  return (\n    <div>\n      {reviews && (\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id} style={{ marginBottom: '16px' }}>\n              <h3>{author}</h3>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n      {reviews.length === 0 && <p>We don't have any reviews for this movie</p>}\n    </div>\n  );\n};\n\nReviews.propTypes = {\n  movieId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n};\n\nexport default Reviews;\n"],"names":["movieId","useState","reviews","setReviews","useEffect","searchById","results","map","id","author","content","style","marginBottom","length"],"sourceRoot":""}